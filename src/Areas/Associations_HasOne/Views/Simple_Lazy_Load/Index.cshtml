@model List<Ext.Net.MVC.Examples.Areas.Associations_HasOne.Models.Simple_Lazy_Load.Person>
@{
    ViewBag.Title = "Simple HasOne Lazy Load Association - Ext.NET Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section example
{
    <h1>Simple HasOne Lazy Load Association</h1>

    @(X.Model()
        .Name("Address")
        .IDProperty("Id")
        .Fields(
            X.ModelField()
                .Name("Id")
                .Type(ModelFieldType.Int),
            X.ModelField().Name("Number"),
            X.ModelField().Name("Street"),
            X.ModelField().Name("City"),
            X.ModelField().Name("Zip")
        )
        .Proxy(p => p.Add(X.PageProxy().DirectFn("App.direct.GetAddress")))
    )

    @(X.Store()
        .ID("PersonsStore")
        .Data(Model)
        .Model(
            X.Model()
            .Name("Person")
            .IDProperty("Id")
            .Fields(
                X.ModelField()
                    .Name("Id")
                    .Type(ModelFieldType.Int),
                X.ModelField().Name("Name"),
                X.ModelField().Name("AddressId")
                    
            )
            .Associations(a => a.Add(X.HasOneAssociation()
                .Model("Address")
                .ForeignKey("AddressId")
                .PrimaryKey("Id")
            ))
        )
    )

    @(X.Panel()
        .Border(false)
        .Width(500)
        .Height(250)
        .LayoutConfig(l => l.Add(new HBoxLayoutConfig { Align = HBoxAlign.Stretch }))
        .Defaults(new { margin = 5 })
        .Items(
            X.GridPanel()
                .StoreID("PersonsStore")
                .Title("Persons (select a row to see an address)")
                .Flex(1)
                .ColumnModel(X.Column()
                    .Text("Name")
                    .DataIndex("Name")
                    .Flex(1)
                )
                .Listeners(l => l.SelectionChange.Handler = MvcUtils.StringifyScriptBlock(@<text><script type="text/javascript">
                    if (selected.length) {
                        selected[0].getAddress(function (address) {
                            #{AddressPanel}.loadRecord(address);
                        });
                    }
                </script></text>)),

            X.FormPanel()
                .ID("AddressPanel")
                .Title("Address")
                .BodyPadding(5)
                .Flex(1)
                .Items(
                    X.DisplayField().FieldLabel("ID").Name("Id"),
                    X.DisplayField().FieldLabel("Number").Name("Number"),
                    X.DisplayField().FieldLabel("Street").Name("Street"),
                    X.DisplayField().FieldLabel("City").Name("City"),
                    X.DisplayField().FieldLabel("Zip").Name("Zip")
                )
        )
    )

    <br />

    @(X.GridPanel()
        .StoreID("PersonsStore")
        .Title("Persons with RowExpander")
        .Width(500)
        .Height(250)
        .ColumnModel(X.Column()
            .Text("Name")
            .DataIndex("Name")
            .Flex(1)
        )
        .Plugins(
            X.RowExpander()
                .SingleExpand(false)
                .Component(X.FormPanel()
                    .BodyPadding(5)
                    .Items(
                        X.DisplayField().FieldLabel("ID").Name("Id"),
                        X.DisplayField().FieldLabel("Number").Name("Number"),
                        X.DisplayField().FieldLabel("Street").Name("Street"),
                        X.DisplayField().FieldLabel("City").Name("City"),
                        X.DisplayField().FieldLabel("Zip").Name("Zip")
                    )
                    .Listeners(ltn => ltn.AfterRender.Handler = MvcUtils.StringifyScriptBlock(@<text><script type="text/javascript">
                        this.el.mask('Loading...');
                        this.record.getAddress(function (address) {
                            this.el.unmask();
                            this.getForm().loadRecord(address);
                        }, this);
                    </script></text>))
                )
        )
    )
}