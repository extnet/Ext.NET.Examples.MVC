@{
    ViewBag.Title = "Lazy Loading Data Associations- Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}

@section example
{
    <h1>Lazy Loading Data Associations</h1>

    <p>This example demonstrates the ability to lazy load associative data. For loading nested data in a single request, see the <a href="../Simple/">Simple</a> example.</p>

    <p>We look at a fictional company that sells furniture to their retail customers.</p>

    <p>Note that each time you navigate down to a new level a separate request is sent to retrieve the appropriate data.</p>

    <p>Once you reach the last level, we also demonstrate the ability to load back up the hierarchy. Note that this creates a new Model instance so no previous association data is present when we begin.</p>

    @(
        X.Container()
            .ID("ModelsContainer")
            .Loader(X.ComponentLoader()
                .Url(Url.Action("RenderModelsCluster"))
                .Mode(LoadMode.Script)
                .Params(new { containerId = "ModelsContainer" })
            )
    )

    @(
        X.Panel()
            .Width(700)
            .Height(400)
            .Border(false)
            .LayoutConfig(new VBoxLayoutConfig() { Align = VBoxAlign.Stretch })
            .Items(
                X.Container()
                    .ID("CustomerGridContainer")
                    .Height(200)
                    .Layout(LayoutType.Card)
                    .MarginSpec("0 0 5 0")
                    .Loader(X.ComponentLoader()
                        .Url(Url.Action("RenderCustomerGrid"))
                        .Mode(LoadMode.Script)
                        .Params(new { containerId = "CustomerGridContainer" })
                        .AutoLoad(false) // will load once the logger panel is ready.
                    ),
                X.Container()
                    .ID("LoggerPanelContainer")
                    .Loader(X.ComponentLoader()
                        .Url(Url.Action("RenderLoggerPanel"))
                        .Mode(LoadMode.Script)
                        .Params(new { containerId = "LoggerPanelContainer" })
                        .Success(MvcUtils.StringifyScriptBlock(@<text><script type="text/javascript">
                            Ext.net.Bus.publish('App.Log', { msg: 'Begin loading customer store', isStart: true });
                            App.CustomerGridContainer.load();
                        </script></text>))
                    )
            )
    )
}